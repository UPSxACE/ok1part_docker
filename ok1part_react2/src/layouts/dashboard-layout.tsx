import DashboardNavbarMenu from '@/components/dashboard-layout/dashboard-navbar-menu';
import DashboardNavbarUser from '@/components/dashboard-layout/dashboard-navbar-user';
import Box from '@mui/material/Box';
import Head from 'next/head';
import { useState } from 'react';
import DashboardPageHeader, {
  IDashboardPageHeaderProps,
} from '@/components/dashboard-layout/dashboard-page-header';
import { useTranslation } from 'next-i18next';

export interface IDashboardLayoutProps {
  children?: React.ReactNode;
  header?: IDashboardPageHeaderProps;
  sx?: { [key: string]: any };
}

export default function DashboardLayout({
  children,
  header,
  sx = {},
}: IDashboardLayoutProps) {
  const { t } = useTranslation();

  const [open, setOpen] = useState(false);
  return (
    <>
      <Head>
        <title>Dashboard</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Box
        id='body'
        sx={{
          overscrollBehaviorY: 'contain',
          width: '100vw',
          maxWidth: '100%',
          display: 'flex',
          flexDirection: 'column',
        }}
      >
        <Box sx={{ display: 'flex', flex: 1, backgroundColor: 'black' }}>
          <DashboardNavbarMenu state={{ open, setOpen }} />
          {/* NOTE: 64px because NavbarMenu takes 64px of Width */}
          <Box sx={{ width: '100%', maxWidth: 'calc(100% - 64px)' }}>
            <DashboardNavbarUser />
            <Box
              sx={{
                width: '100%',
                maxWidth: 'calc(100%)',
                minHeight: 'calc(100vh - 70px)',
                display: 'flex',
                justifyContent: 'flex-start',
                alignItems: 'flex-start',
                flexDirection: 'column',
                backgroundColor: 'theme1.components4',
                padding: { xs: 2, sm: 4 },
                paddingTop: header ? 2 : 4,
                ...sx,
              }}
            >
              {header && (
                <DashboardPageHeader
                  title={t('common:' + header.title)}
                  rightText={t('common:' + header.rightText)}
                  faIcon={header.faIcon}
                />
              )}
              {children}
            </Box>
          </Box>
        </Box>
      </Box>
    </>
  );
}
